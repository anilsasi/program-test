a call back is an executable code, that is passed an argument to another function.

1.If a reference of a function is passed to another function as an argument to call it, then it it will be called as a Callback function.
a function name can also used to get function address.

pointer to array:
int (*ptr)[5];
array of pointers
int* ptr[5];

void (*func[])(int, int) = {add, sub, multiply};

variables:
const variables are readonly, you can change data using pointers.
constant pointer also serves the same purpose- read only.

Declaration and defination:
Declaration: tells the compiler name and type
Defination: space will be allocated, the used by the linker to link a name reference to the content of the name.
Definitions specify what code or data the name describes. A name must be declared before it can be used.

static variables:
intialized only once and exists till the program termination.
the scope of static variable limited to function, where they defined.

Little Endian:
Little Endian means that the lower order byte of the number is stored in memory at the lowest address, and the higher order byte is stored at the highest address.

Big Endian: 
Big Endian means that the higher order byte of the number is stored in memory at the lowest address, and the lower order byte is stored at the highest address.
